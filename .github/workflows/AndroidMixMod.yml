name: AndroidMixMod workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'releases/**'
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26
          local-cache: true
      - name: Setup .NET 6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Download hearthstone apk
        run: |
          repo_dir=$(pwd)
          mkdir ../downloads/
          cd ../downloads/
          curl '${{ secrets.APK_URL }}' \
            -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' \
            -H 'Accept-Language: ru,ru-RU;q=0.9,en-US;q=0.8,en;q=0.7,vi;q=0.6' \
            -H 'Cache-Control: no-cache' \
            -H 'Connection: keep-alive' \
            -H 'Pragma: no-cache' \
            -H 'Sec-Fetch-Dest: document' \
            -H 'Sec-Fetch-Mode: navigate' \
            -H 'Sec-Fetch-Site: none' \
            -H 'Sec-Fetch-User: ?1' \
            -H 'Upgrade-Insecure-Requests: 1' \
            -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36' \
            -H 'sec-ch-ua: "Chromium";v="124", "Google Chrome";v="124", "Not-A.Brand";v="99"' \
            -H 'sec-ch-ua-mobile: ?0' \
            -H 'sec-ch-ua-platform: "macOS"' \
            -o hs.apk
          old_apk_name="hs.apk"
          apk_name="hs.apk"
          mixmod_apk_name="HearthstoneMixMod_${{ secrets.VERSION }}.apk"
          echo "apk_name=${apk_name}" >> $GITHUB_ENV
          echo "mixmod_apk_name=${mixmod_apk_name}" >> $GITHUB_ENV
          apk_folder_name=${apk_name%.*}
          echo "apk_folder_name=${apk_folder_name}" >> $GITHUB_ENV
          echo "apk_version=${apk_folder_name#*_}" >> $GITHUB_ENV
          cd ${repo_dir}
      - name: Download Apktool
        run: wget https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar -O ../downloads/apktool.jar
      - name: Decompile hearthstone apk
        run: |
          repo_dir=$(pwd)
          cd ../downloads/
          java -jar apktool.jar d ${{ env.apk_name }} -o ${{ env.apk_folder_name }}
          cd ${repo_dir}
      - name: Modify hearthstone apk
        run: |
          repo_dir=$(pwd)
          cd ../downloads/${{ env.apk_folder_name }}/
          git apply ${repo_dir}/0002-AndroidMixMod.patch
          cd ${repo_dir}
      - name: Download Il2CppDumper
        run: |
          repo_dir=$(pwd)
          cd ../downloads/
          wget https://github.com/Perfare/Il2CppDumper/releases/download/v6.7.46/Il2CppDumper-net6-v6.7.46.zip -O ./Il2CppDumper.zip
          unzip Il2CppDumper.zip -d Il2CppDumper
          sed -i "s/\"GenerateDummyDll\": true/\"GenerateDummyDll\": false/" ./Il2CppDumper/config.json
          sed -i "s/\"RequireAnyKey\": true/\"RequireAnyKey\": false/" ./Il2CppDumper/config.json
          cd ${repo_dir}
      - name: Download Generator
        run: |
          repo_dir=$(pwd)
          cd ../downloads/
          wget https://github.com/DeNcHiK3713/Generator/releases/latest/download/Generator-net6.0-linux-x64.zip -O ./Generator.zip
          unzip Generator.zip -d Generator
          chmod +x ./Generator/Generator
          cd ${repo_dir}
      - name: Dump with Il2CppDumper
        run: |
          repo_dir=$(pwd)
          cd ../downloads/
          mkdir arm64-v8a
          dotnet ./Il2CppDumper/Il2CppDumper.dll ./${{ env.apk_folder_name }}/lib/arm64-v8a/libil2cpp.so ./${{ env.apk_folder_name }}/assets/bin/Data/Managed/Metadata/global-metadata.dat ./arm64-v8a/
          mkdir armeabi-v7a
          dotnet ./Il2CppDumper/Il2CppDumper.dll ./${{ env.apk_folder_name }}/lib/armeabi-v7a/libil2cpp.so ./${{ env.apk_folder_name }}/assets/bin/Data/Managed/Metadata/global-metadata.dat ./armeabi-v7a/
          echo "Contents of ./arm64-v8a:"
          ls -la ./arm64-v8a
          echo "Contents of ./armeabi-v7a:"
          ls -la ./armeabi-v7a
          # cp ./arm64-v8a/il2cpp.h ${repo_dir}/app/src/main/jni/Includes/
          # sed -i "s/std\(in\|out\|err\)/_std\1/g" ${repo_dir}/app/src/main/jni/Includes/il2cpp.h
          cd ${repo_dir}
      - name: Dump with Il2CppInspector
        run: |
          cd ../downloads/
          dotnet ./Il2CppInspector/Il2CppInspector.CLI.dll ./${{ env.apk_folder_name }}/lib/arm64-v8a/libil2cpp.so ./${{ env.apk_folder_name }}/assets/bin/Data/Managed/Metadata/global-metadata.dat -o ./arm64-v8a-inspector
      - name: Dump with Il2CppDumper (no cpp)
        run: |
          cd ../downloads/
          dotnet ./Il2CppDumper/Il2CppDumper.dll ./${{ env.apk_folder_name }}/lib/arm64-v8a/libil2cpp.so ./${{ env.apk_folder_name }}/assets/bin/Data/Managed/Metadata/global-metadata.dat ./arm64-v8a/ --no-cpp
      - name: Check libil2cpp.so encryption
        run: |
          cd ../downloads/
          file ./${{ env.apk_folder_name }}/lib/arm64-v8a/libil2cpp.so
      - name: Check Unity version
        run: |
          cd ../downloads/
          strings ./${{ env.apk_folder_name }}/lib/arm64-v8a/libunity.so | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+f[0-9]\+"
      - name: Generate offsets
        run: |
          repo_dir=$(pwd)
          cd ../downloads/
          search_str="androidRenderOutsideSafeArea"
          echo "#ifdef __aarch64__" > ${repo_dir}/app/src/main/jni/Includes/Offsets.h
          ./Generator/Generator ${repo_dir}/OffsetsTemplate.json ./arm64-v8a/script.json ./${{ env.apk_folder_name }}/lib/arm64-v8a/libil2cpp.so ARM64 >> ${repo_dir}/app/src/main/jni/Includes/Offsets.h
          offset=$(grep -oba -m1 -o ${search_str} ./${{ env.apk_folder_name }}/lib/armeabi-v7a/libunity.so)
          printf "#define Unity_AndroidRenderOutsideSafeArea_Offset \"0x%X\"\n" $((${offset%:${search_str}} + ${#search_str} - 1)) >> ${repo_dir}/app/src/main/jni/Includes/Offsets.h
          echo -e "#else\n" >> ${repo_dir}/app/src/main/jni/Includes/Offsets.h
          ./Generator/Generator ${repo_dir}/OffsetsTemplate.json ./armeabi-v7a/script.json ./${{ env.apk_folder_name }}/lib/armeabi-v7a/libil2cpp.so ARM >> ${repo_dir}/app/src/main/jni/Includes/Offsets.h
          offset=$(grep -oba -m1 -o ${search_str} ./${{ env.apk_folder_name }}/lib/armeabi-v7a/libunity.so)
          printf "#define Unity_AndroidRenderOutsideSafeArea_Offset \"0x%X\"\n" $((${offset%:${search_str}} + ${#search_str} - 1)) >> ${repo_dir}/app/src/main/jni/Includes/Offsets.h
          echo "#endif" >> ${repo_dir}/app/src/main/jni/Includes/Offsets.h
          cd ${repo_dir}
      # - name: Commit changes
      #   id: git_auto_commit
      #   uses: stefanzweifel/git-auto-commit-action@v4
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Decompile apk
        run: |
          repo_dir=$(pwd)
          cd ../downloads/
          java -jar apktool.jar d ${repo_dir}/app/build/outputs/apk/release/app-release.apk -o MixMod
          cd ${repo_dir}
      - name: Modify hearthstone apk
        run: |
          repo_dir=$(pwd)
          cd ../downloads/
          smali_dirs=(./${{ env.apk_folder_name }}/smali*)
          last_smali_dir="${smali_dirs[${#smali_dirs[@]}-1]}"
          unset smali_dirs
          cp -R ./MixMod/smali/* $last_smali_dir
          cp -R ./MixMod/lib/* ./${{ env.apk_folder_name }}/lib/
          cd ${repo_dir}
      - name: Recompile hearthstone apk
        run: |
          repo_dir=$(pwd)
          cd ../downloads/
          mkdir ../Release/
          java -jar apktool.jar b ${{ env.apk_folder_name }} -o ../Release/${{ env.mixmod_apk_name }}
          cd ${repo_dir}
      - name: Signing hearthstone apk
        uses: kevin-david/zipalign-sign-android-release@v1.1
        id: sign_app
        with:
          releaseDirectory: ../Release/
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          zipAlign: true
      - name: Prepare to release
        run: |
          mkdir ../Release/signed/
          mv ${{steps.sign_app.outputs.signedReleaseFile}} ../Release/signed/${{ env.mixmod_apk_name }}
      - uses: "ncipollo/release-action@v1"
        with:
          tag: "${{ secrets.VERSION }}"
          name: "AndroidMixMod"
          artifacts: "../Release/signed/${{ env.mixmod_apk_name }}"
